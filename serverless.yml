service: imagine-api

provider:
  name: aws
  runtime: nodejs4.3
  environment: ${file(./config.js):env}

package:
  artifact: dist.zip

functions:
  writePost:
    handler: handler.writePost
    events:
      - http:
          method: post
          path: ${self:service}/api/posts/new
          cors: true

  getPost:
    handler: handler.getPost
    events:
      - http:
          method: get
          path: ${self:service}/api/posts/{id}
          integration: lambda
          request:
            parameters:
              paths:
                id: true

  getUser:
    handler: handler.getUser
    events:
      - http:
          method: get
          path: ${self:service}/api/users
          cors: true
  signup:
    handler: handler.signup
    events:
      - http:
          method: post
          path: ${self:service}/api/users/new
          cors: true

  signin:
    handler: handler.signin
    events:
      - http:
          method: post
          path: ${self:service}/api/users
          cors: true

resources:
  Resources:
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: AmazonDynamoDBFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: arn:aws:dynamodb:*:*:*
        Roles:
          - Ref: IamRoleLambdaExecution

    GetPostLogGroup:
      Properties:
        RetentionInDays: "30"

    WritePostLogGroup:
      Properties:
        RetentionInDays: "30"
